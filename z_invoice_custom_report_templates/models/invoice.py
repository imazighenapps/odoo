# -*- coding: utf-8 -*-

from num2words import num2words

from odoo import _, api, fields, models


class InvoiceTemplates(models.Model):
    _inherit = ["account.move"]

    @api.onchange('partner_id')
    def onchange_partner_style(self):
        self.style = self.partner_id.style or self.env.user.company_id.df_style or self.env.ref(
            'z_invoice_custom_report_templates.company_address.df_style_for_all_reports')

    @api.model
    def create(self, vals):
        res = super(InvoiceTemplates, self).create(vals)
        if res:  # trigger onchage after creating invoice to update the partner style
            res.onchange_partner_style()
        return res

    style = fields.Many2one(
        'report.template.settings',
        'Invoice Style',
        help="Select style to use when printing this invoice",
        default=lambda self: self.partner_id.style or self.env.user.company_id.
        df_style)
        
    project_title = fields.Char(
        'Title',
        help=
        "The title of your customer project or work you are doing for your customer"
    )
    amount_words = fields.Char(
        'Amount in Words:',
        help=
        "The invoice total amount in words is automatically generated by the system..few languages are supported currently",
        compute='_compute_num2words')

    def _compute_num2words(self):
        for rec in self:
            style = rec.style or rec.partner_id.style or rec.env.user.company_id.df_style or rec.env.ref(
                'z_invoice_custom_report_templates.company_address.df_style_for_all_reports')
            if style and style.aiw_report:
                try:
                    rec.amount_words = num2words(
                        rec.amount_total, lang=rec.partner_id.lang or 'en').upper()
                except NotImplementedError:
                    rec.amount_words = num2words(rec.amount_total,
                                                 lang='en').upper()
            else:
                rec.amount_words = _('DISABLED')
